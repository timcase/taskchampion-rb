name: Ruby CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: Ruby ${{ matrix.ruby }} on ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest ]
        ruby: ['3.2', '3.3', '3.4']

    steps:
      - uses: actions/checkout@v4

      - name: Configure Windows environment (Windows only)
        if: runner.os == 'Windows'
        run: |
          # Create cargo and rustup directories on same drive as project
          mkdir -p D:\.cargo
          mkdir -p D:\.rustup
          # Configure git to handle Windows paths properly
          git config --global core.autocrlf input
          git config --global core.longpaths true
          # Check Clang version for debugging
          echo "Clang version:"
          clang --version || echo "Clang not found in PATH"
        shell: bash

      - name: Set up Ruby & Rust
        uses: oxidize-rb/actions/setup-ruby-and-rust@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
          cargo-cache: true
          rubygems: latest
        env:
          # Fix for Windows cross-drive path issues
          CARGO_HOME: ${{ runner.os == 'Windows' && 'D:\\.cargo' || '' }}
          RUSTUP_HOME: ${{ runner.os == 'Windows' && 'D:\\.rustup' || '' }}

      - name: Run tests
        run: bundle exec rake test
        env:
          # Additional Windows environment variables to fix path issues
          BUNDLE_PATH: ${{ runner.os == 'Windows' && 'D:/a/taskchampion-rb/taskchampion-rb/vendor/bundle' || '' }}
          BUNDLE_DEPLOYMENT: ${{ runner.os == 'Windows' && 'false' || '' }}
          # Ensure cargo uses same drive as project on Windows
          CARGO_HOME: ${{ runner.os == 'Windows' && 'D:\\.cargo' || '' }}
          RUSTUP_HOME: ${{ runner.os == 'Windows' && 'D:\\.rustup' || '' }}
          # Fix bindgen/Clang issues with AVX512 intrinsics on Windows
          # Disable problematic intrinsics that cause errors with Clang 20
          BINDGEN_EXTRA_CLANG_ARGS: ${{ runner.os == 'Windows' && '-U__AVX512F__ -U__AVX10_2_512__ -U__AVX10_2__ -U__AMX_AVX512__' || '' }}

  lint:
    runs-on: ubuntu-latest
    name: RuboCop

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true

      - name: Run RuboCop
        run: bundle exec rake rubocop
